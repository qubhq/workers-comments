openapi: 3.0.0
info:
  title: comments
  version: '1.0'
  description: Small Comments API built on top of Cloudflare Workers.
  contact:
    name: Gheorghe Avram
    email: gheo@qubuilder.com
  license:
    name: MIT
    url: 'https://spdx.org/licenses/MIT.html'
servers:
  - url: 'https://workers-comments.qubuilder.workers.dev'
    description: Production
paths:
  '/comments/{article}':
    get:
      summary: Get Comments
      tags:
        - Comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
                  cursor:
                    type: string
                    nullable: true
        '500':
          $ref: '#/components/responses/Error'
      operationId: get-comments-article
      description: Get all Comments of an article
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
    parameters:
      - $ref: '#/components/parameters/article'
    post:
      summary: Create a Comment
      operationId: post-comments-article
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Comment'
                - type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: Email of the author
                  required:
                    - email
      description: Create a comment for an article
      tags:
        - Comment
components:
  schemas:
    Comment:
      title: Comment
      type: object
      x-tags:
        - Comment
      description: Comment object delivered by api.
      properties:
        id:
          type: string
          description: Id of Comment
          readOnly: true
        name:
          type: string
          description: Name of the comment author
        content:
          type: string
          description: Comment Content
        profile:
          type: string
          description: URL for Profile Picture
          readOnly: true
        time:
          type: string
          format: date-time
          description: Timestamp comment was created at
          readOnly: true
      required:
        - id
        - name
        - content
        - profile
        - time
  responses:
    Error:
      description: Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  parameters:
    article:
      name: article
      in: path
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      schema:
        type: number
      description: amount of comments to be delivered at once
    cursor:
      name: cursor
      in: query
      schema:
        type: string
      description: cursor from previous request to deliver next batch
tags:
  - name: Comment
